'use strict';

const log = require('npmlog');
const versioning = require('./util/versioning.js');
const s3Setup = require('./util/s3_setup.js');

module.exports = exports = info;

exports.usage = 'Lists all published binaries (requires aws-sdk)';

function info(gyp, argv, callback) {
  const packageJson = gyp.package_json;
  const opts = versioning.evaluate(packageJson, gyp.opts);
  const config = {};
  s3Setup.detect(opts, config);
  const s3 = s3Setup.getS3(config);
  const s3Opts = {
    Bucket: config.bucket,
    Prefix: config.prefix,
  };

  s3.listObjects(s3Opts, (err, meta) => {
    if (err) {
      if (err.code === 'NotFound') {
        const errorMessage = `[${packageJson.name}] Not found: https://${s3Opts.Bucket}.s3.amazonaws.com/${config.prefix}`;
        return callback(new Error(errorMessage));
      } else {
        return callback(err);
      }
    } else {
      log.verbose(JSON.stringify(meta, null, 1));

      if (meta && meta.Contents) {
        meta.Contents.forEach((obj) => {
          console.log(obj.Key);
        });
      } else {
        const errorMessage = `[${packageJson.name}] No objects found at https://${s3Opts.Bucket}.s3.amazonaws.com/${config.prefix}`;
        console.error(errorMessage);
      }

      return callback();
    }
  });
}
