#!/usr/bin/env node
'use strict';

const nopt = require('../lib/nopt');
const path = require('path');

const types = {
    num: Number,
    bool: Boolean,
    help: Boolean,
    list: Array,
    'num-list': [Number, Array],
    'str-list': [String, Array],
    'bool-list': [Boolean, Array],
    str: String,
    clear: Boolean,
    config: Boolean,
    length: Number,
    file: path,
};

const shorthands = {
    s: ['--str', 'astring'],
    b: ['--bool'],
    nb: ['--no-bool'],
    tft: ['--bool-list', '--no-bool-list', '--bool-list', 'true'],
    '?': ['--help'],
    h: ['--help'],
    H: ['--help'],
    n: ['--num', '125'],
    c: ['--config'],
    l: ['--length'],
    f: ['--file'],
};

const parsed = nopt(types, shorthands, process.argv, 2);

console.log('parsed', parsed);

if (parsed.help) {
    console.log('');
    console.log('nopt cli tester');
    console.log('');
    console.log('types');
    console.log(
        Object.keys(types).reduce((acc, t) => {
            const type = types[t];
            acc[t] = Array.isArray(type) ? type.map((type) => type.name) : type && type.name;
            return acc;
        }, {})
    );
    console.log('');
    console.log('shorthands');
    console.log(shorthands);
}
